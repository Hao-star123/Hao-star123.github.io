<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/01/hello-world/"/>
      <url>/2023/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>指针知识框架（详解）</title>
      <link href="/2023/01/29/%E6%8C%87%E9%92%88%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89/"/>
      <url>/2023/01/29/%E6%8C%87%E9%92%88%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="指针知识框架（详解）"><a href="#指针知识框架（详解）" class="headerlink" title="指针知识框架（详解）"></a>指针知识框架（详解）</h1><blockquote><p>本文为C语言学习过程中关于指针的笔记。根据书籍和程序题并参考网络上的博客回答，撰写的感悟和收获。<br>文章参考：<br>C语言解惑指针、数组、函数和多文件编程（作者刘振安刘燕君，机械工业出版社）</p></blockquote><h2 id="一、对指针使用const限定符"><a href="#一、对指针使用const限定符" class="headerlink" title="一、对指针使用const限定符"></a>一、对指针使用const限定符</h2><h3 id="1-指向常量的指针"><a href="#1-指向常量的指针" class="headerlink" title="1.指向常量的指针"></a>1.指向常量的指针</h3><blockquote><p>const int  y&#x3D;66;<br>const int <em>p&#x3D;&amp;y; &#x2F;&#x2F;此时y和</em>p都不能做为左值，但可以作为右值。</p></blockquote><p>使指针指向一个不可修改的常量，即<em>p是常量。但是可以通过修改p指向的地址，改变</em>p的值。<br>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="type">const</span> <span class="type">int</span> y=<span class="number">66</span>;</span><br><span class="line"> <span class="type">int</span> x=<span class="number">50</span>;</span><br><span class="line"> <span class="type">const</span> <span class="type">int</span> * p =&amp;y;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%p\n&quot;</span>,y,*p,p);</span><br><span class="line"> p=&amp;x;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%p\n&quot;</span>,x,*p,p);</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment">  66,66,000000000062FE14</span></span><br><span class="line"><span class="comment">  50,50,000000000062FE10*/</span></span><br></pre></td></tr></table></figure><p> 由指向y改为指向x,*p被覆盖。 </p><h3 id="2-指向常量的指针指向非常量"><a href="#2-指向常量的指针指向非常量" class="headerlink" title="2.指向常量的指针指向非常量"></a>2.指向常量的指针指向非常量</h3><p>示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">55</span> ;<span class="comment">//变量x能作为左值和右值</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> y=<span class="number">88</span>;<span class="comment">//常量y不能作为左值，但可以作为右值</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> *p;<span class="comment">//声明指向常量的指针</span></span><br><span class="line">    <span class="type">int</span> *p1 ;<span class="comment">//声明指针</span></span><br><span class="line">    p=&amp;y ;<span class="comment">//用常量初始化指向常量的指针，*p不能作为左值</span></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;%d &quot;</span>,*p) ;</span><br><span class="line">    p=&amp;x;<span class="comment">//p作为左值，使常量指针改为指向变量x,*p不能作为左值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*p) ;</span><br><span class="line">    x=<span class="number">128</span> ;<span class="comment">//用x作为左值间接改变*p的值，使*p=x=128</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *p) ;</span><br><span class="line">    p1=(<span class="type">int</span>*)&amp;y;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p1) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例中指向常量的指针p指向变量x,仅限制直接使用<em>p作为左值，但可以通过直接修改x的值改变</em>p的值。同时也与使用非常量指针一样，也可以直接使用“&amp;”改变常量指针的指向，显然也改变了*p的值。</p><blockquote><p>【注】常量只能由指向常量的指针（即const void<em>p）指向，否则必须进行强制转换，将常量强制转换为相应的指针类型。如示例：p1&#x3D;(int</em>)&amp;y;</p></blockquote><h3 id="3-常量指针"><a href="#3-常量指针" class="headerlink" title="3.常量指针"></a>3.常量指针</h3><p>限定符const放在*号右边，是指针本身成为一个const指针。声明常量时必须进行初始化，即指针变量p存储的为常量地址。</p><blockquote><p>例如:int x&#x3D;45;<br>int * const p&#x3D;&amp;x&#x2F;&#x2F;p始终指向x的地址。但可以修改x地址内存的值，x&#x3D;123和*p&#x3D;123；但p指向的地址不能改变</p></blockquote><h3 id="4-指向常量的常量指针"><a href="#4-指向常量的常量指针" class="headerlink" title="4.指向常量的常量指针"></a>4.指向常量的常量指针</h3><p>即指针和指向的对象都不能改动的“指向常量的常量指针”。<em>p和p都是常量。限制了“&amp;”和“</em>”运算符，很少使用。</p><h3 id="5-void指针"><a href="#5-void指针" class="headerlink" title="5.void指针"></a>5.void指针</h3><p>void类型不能声明变量，但可以声明void类型的指针，而void型指针可以指向任何类型的变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">256</span>, y=<span class="number">386</span>,*p=&amp;x;</span><br><span class="line">    <span class="type">void</span>*vp=&amp;x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d\n&quot;</span>,vp,p,x);</span><br><span class="line">    vp=&amp;y;</span><br><span class="line">    p=(<span class="type">int</span>*)vp;<span class="comment">//虽然void指针指向整型变量对象x，但不能使用*vp应用整型对象的值。要引用这个值，必须强制将void指针赋值给与值相对应的指针类型。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d\n&quot;</span>,vp,p,*p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>【注】但奇怪的是，测试时发现p&#x3D;(int*)vp不加（int*）也可以正常运行。  </p></blockquote><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>const放在<em>的右边（void * const p）,修饰的是指针（即指针变量p指向的地址）不可改变。<br>const放在前端（const void * p）,修饰的是指向的对象（指针变量p存储的地址的值）,即</em>p是常量</p><h2 id="二、指针与数组"><a href="#二、指针与数组" class="headerlink" title="二、指针与数组"></a>二、指针与数组</h2><h3 id="1-数组与指针的关系"><a href="#1-数组与指针的关系" class="headerlink" title="1.数组与指针的关系"></a>1.数组与指针的关系</h3><p>指向数组的指针实际上指的是能够指向数组众人一个元素的指针。</p><blockquote><p>int a[5];<br>int *pa&#x3D;&amp;a[0];&#x2F;&#x2F;等同于int *pa;<br>&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;  pa&#x3D;a;  </p></blockquote><p>数组名和指针的区别：指针是变量：pa&#x3D;a或pa++是有意义的；<br>      数组名是指针常量：a&#x3D;pa、a++、pa&#x3D;&amp;a（a本身就是地址，无法对地址取地址）是非法操作。<br>假设指针现在指向a[0],则数组的第i个（下标为i）元素可表示为a[i]或<em>（pa+i）,还可使用带下标的指针pa,即pa[i]和</em>（pa+i）的含义一样。若将a[i]的值修改，下列语句等价。  </p><blockquote><p>a[i]&#x3D;123; *(a+4)&#x3D;123; *(pa+4)&#x3D;123; pa[4]&#x3D;123;  </p></blockquote><p><em><center>指针与数组元素的关系</center></em>    </p><table><thead><tr><th>下标</th><th>数组名</th><th>指针</th><th>指针下标</th><th>四者的逻辑关系</th></tr></thead><tbody><tr><td>a[0]</td><td>a</td><td>pa</td><td>pa[0]</td><td>a[0]&#x3D;&#x3D;*a&#x3D;&#x3D;*pa&#x3D;&#x3D;pa[0]</td></tr><tr><td>a[1]</td><td>a+1</td><td>pa+1</td><td>pa[1]</td><td>a[1]&#x3D;&#x3D;<em>(a+1)&#x3D;&#x3D;</em>(pa+1)&#x3D;&#x3D;pa[1]</td></tr><tr><td>a[2]</td><td>a+2</td><td>pa+2</td><td>pa[2]</td><td>a[2]&#x3D;&#x3D;<em>(a+2)&#x3D;&#x3D;</em>(pa+2)&#x3D;&#x3D;pa[2]</td></tr></tbody></table><h2 id="2-指针数组和数组指针"><a href="#2-指针数组和数组指针" class="headerlink" title="2.指针数组和数组指针"></a>2.指针数组和数组指针</h2><blockquote><p>数组的指针：是一个指针，什么样的指针呢？指向数组的指针。<br>指针的数组：是一个数组，什么样的数组呢？装着指针的数组。<br>本质是的后面是类型。<br>然后，需要明确一个优先级顺序：()&gt;[]&gt;*，所以：<br>(*p)[n]：根据优先级，先看括号内，则p是一个指针，这个指针指向一个一维数组，数组长度为n，这是“数组的指针”，即数组指针；<br><em>p[n]：根据优先级，先看[]，则p是一个数组，再结合</em>，这个数组的元素是指针类型，共n个元素，这是“指针的数组”，即指针数组。<br>根据上面两个分析，可以看出，p是什么，则词组的中心词就是什么，即数组“指针”和指针“数组”。  <br>————数组指针和指针数组_mick_hu的博客-CSDN博客_数组指针和指针数组<a href="https://blog.csdn.net/mick_hu/article/details/100931034?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166954491916782428658613%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166954491916782428658613&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-100931034-null-null.142%5Ev66%5Econtrol,201%5Ev3%5Econtrol_2,213%5Ev2%5Et3_esquery_v2&utm_term=%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%92%8C%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88&spm=1018.2226.3001.4187">原文地址</a>  </p></blockquote><h2 id="3-c语言优先级"><a href="#3-c语言优先级" class="headerlink" title="3. c语言优先级"></a>3. c语言优先级</h2><blockquote><p>C语言运算符优先级（超详细）_embed_huang的博客-CSDN博客_c语言运算符优先级构成一系列表达式（六个左右），然后分析并打印输出他的结果<a href="https://blog.csdn.net/huangblog/article/details/8271791?spm=1001.2014.3001.5506">原文地址</a>  </p></blockquote><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 学习相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C,指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C指针与地址</title>
      <link href="/2023/01/29/C%E6%8C%87%E9%92%88%E4%B8%8E%E5%9C%B0%E5%9D%80/"/>
      <url>/2023/01/29/C%E6%8C%87%E9%92%88%E4%B8%8E%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="C指针与地址"><a href="#C指针与地址" class="headerlink" title="C指针与地址"></a>C指针与地址</h1><blockquote><p>在C语言的学习过程中，常理不清指针（即一个变量的地址）和指针变量（专门用来存放另一变量的地址(指针)的变量）的关系，因此通过程序打印地址运行结果，来分析加强理解。以此记录学习过程中的心得，希望能帮到大家，感谢指正。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="一、代码示例"><a href="#一、代码示例" class="headerlink" title="一、代码示例"></a>一、代码示例</h3><p> 代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">88</span>,b=<span class="number">60</span> ;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    p=&amp;a;<span class="comment">//指向a的地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#p&quot;</span>,p);<span class="comment">//以十六进制的形式输出</span></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot; %p &quot;</span>,*p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %p\n&quot;</span>,&amp;p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,p);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot; %d &quot;</span>,*p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,&amp;p);</span><br><span class="line">    p--;<span class="comment">//指针移动指向b的地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#p&quot;</span>,p);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot; %p &quot;</span>,*p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %p\n&quot;</span>,&amp;p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,p);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot; %d &quot;</span>,*p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,&amp;p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-运行结果"><a href="#2-运行结果" class="headerlink" title="2.运行结果"></a>2.运行结果</h3><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">000000000061F</span>E1C</span><br><span class="line"><span class="number">0X000000000061FE1C</span> <span class="number">0000000000000058</span>  <span class="number">000000000061F</span>E10</span><br><span class="line"><span class="number">6422044</span> <span class="number">88</span>  <span class="number">6422032</span></span><br><span class="line"><span class="number">000000000061F</span>E18</span><br><span class="line"><span class="number">0X000000000061FE18</span> <span class="number">000000000000003</span>C  <span class="number">000000000061F</span>E10</span><br><span class="line"><span class="number">6422040</span> <span class="number">60</span>  <span class="number">6422032</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在指针<em>p&#x3D;&amp;a初始化后，p等同于&amp;a即a的地址，在运行过程中可以代换。%#p是输出位0X开开头的16进制数。因此printf(“%p\n”,&amp;a);    printf(“%#p”,p);本质是一样的。</em>p则是通过指针变量p存储的a的地址，间接获取a的值。*p&#x3D;a,对数值%p等同于对数值以十六进制位输出。%d对p,*p,&amp;p则是以十进制形式分别输出地址，值，地址。    </p><p>p–，由于p是整型指针，p–减去int的4个字节刚好移动到b。  </p><blockquote><p>【注】1.这里发现后定义的变量b的地址要小于a的地址，这是因为c语言中，先定义的数据先入栈，在栈的底部（不分配内存），声明结束后，b在栈顶，所以b先出栈，先为b分配内存。因此b的地址小于a的地址。<br>&amp;emsp;&amp;emsp;&amp;emsp;2.数据的地址位数和数据能存储的位数无关。学习阶段曾存在疑问（输出的地址是16位，int是4字节，即16进制的4位代表一个字节（实际应该是一个字节等于2位16进制），一个字节等于八位二进制，但八位二进制不等于四位16进制？）通过交流请教得知有关计算机组成原理，地址位数只取决于系统，所有类型的指针所占长度相同。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C,指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A. Watermelon</title>
      <link href="/2023/01/28/A-Watermelon/"/>
      <url>/2023/01/28/A-Watermelon/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Watermelon-（水题）"><a href="#A-Watermelon-（水题）" class="headerlink" title="A. Watermelon  （水题）"></a>A. Watermelon  （水题）</h1><p><em><center>time limit per test1 second<br>memory limit per test64 megabytes<br>inputstandard input<br>outputstandard output</center></em>   </p><blockquote><p>One hot summer day Pete and his friend Billy decided to buy a watermelon. They chose the biggest and the ripest one, in their opinion. After that the watermelon was weighed, and the scales showed w kilos. They rushed home, dying of thirst, and decided to divide the berry, however they faced a hard problem.</p></blockquote><blockquote><p>Pete and Billy are great fans of even numbers, that’s why they want to divide the watermelon in such a way that each of the two parts weighs even number of kilos, at the same time it is not obligatory that the parts are equal. The boys are extremely tired and want to start their meal as soon as possible, that’s why you should help them and find out, if they can divide the watermelon in the way they want. For sure, each of them should get a part of positive weight.</p></blockquote><h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><p>The first (and the only) input line contains integer number w (1 ≤ w ≤ 100) — the weight of the watermelon bought by the boys.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h4><p>Print YES, if the boys can divide the watermelon into two parts, each of them weighing even number of kilos; and NO in the opposite case.</p><h4 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h4><ol><li><p>input：</p><ul><li>8</li></ul></li><li><p>output：</p><ul><li>YES</li></ul></li></ol><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>For example, the boys can divide the watermelon into two parts of 2 and 6 kilos respectively (another variant — two parts of 4 and 4 kilos).  </p><blockquote><p>AC代码<br>首次：没有考虑到该点，写的较为复杂。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> w;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;w);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;(w/<span class="number">2</span>+<span class="number">1</span>);i=i+<span class="number">2</span>)&#123;</span><br><span class="line">     <span class="keyword">if</span>(w==(i+(w-i))&amp;&amp;((w-i)%<span class="number">2</span>==<span class="number">0</span>))</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>公认：</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;w);</span><br><span class="line">    <span class="keyword">if</span> (w == <span class="number">2</span> || w % <span class="number">2</span> != <span class="number">0</span>)<span class="comment">//因为除了2，所有偶数一定可以由两个偶数组成。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM刷题,codeforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言逆序后四位</title>
      <link href="/2022/10/20/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E9%80%86%E5%BA%8F%E5%90%8E%E5%9B%9B%E4%BD%8D/"/>
      <url>/2022/10/20/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E9%80%86%E5%BA%8F%E5%90%8E%E5%9B%9B%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言逆序后四位"><a href="#C语言逆序后四位" class="headerlink" title="C语言逆序后四位"></a>C语言逆序后四位</h1><p>作业练习一题，尝试将输入数据各位转入数组。代码前段来源——<a href="https://blog.csdn.net/qq_43467892/article/details/108874177?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166626062916800186574482%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166626062916800186574482&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-14-108874177-null-null.142%5Ev59%5Enew_blog_pos_by_title,201%5Ev3%5Econtrol_2&utm_term=c%E8%AF%AD%E8%A8%80%E5%B0%86%E5%AD%97%E7%AC%A6%E5%88%9B%E5%AD%98%E5%85%A5%E6%95%B0%E7%BB%84&spm=1018.2226.3001.4187">进阶版老黑：</a></p><blockquote><p>任务描述:<br>程序每次读入一个至少4位数的正整数，然后输出其后4位按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入57000，输出应该是7。<br>输入格式:<br>每个测试是一个正整数。<br>输出格式:<br>输出逆序的数。<br>输入样例1: 34500<br>输出样例1: 54<br>输入样例2: 34567<br>输出样例2: 7654</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((c = getchar()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))</span><br><span class="line">&#123;</span><br><span class="line">ungetc(c, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;a[n++]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">     <span class="keyword">for</span> (i = n<span class="number">-1</span>; i &gt;=n<span class="number">-4</span>; i--)</span><br><span class="line">     &#123;  <span class="keyword">if</span> (a[i]!=<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i]);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C练习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
